
@{
    ViewBag.Title = "Pick Scores";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var inputAttributes = Model.ReadOnly ? (object)new
    {
        @class= "form-control input-box text-center",
        disabled ="disabled", @readonly="readonly"
    } :
    (object)new
    {
        @class = "form-control input-box text-center"
    };
    var checkboxAttributesBanker = Model.ReadOnly ? (object)new { @class = "toggle banker", disabled = "disabled", @readonly = "readonly" } : (object)new { @class = "toggle banker" };
    var checkboxAttributesDouble = Model.ReadOnly ? (object)new { @class = "toggle double", disabled = "disabled", @readonly = "readonly" } : (object)new { @class = "toggle double" };
}

@model CalledThat.ViewModels.AddPicksViewModel
    <div class="col-lg-12">
        <h1 class="page-header">Pick Scores - Gameweek @Model.Gameweek</h1>
        <p class="text-muted">Selection Opens/Closes: @Model.OpenDateTime.ToString("dd-MMM-yyyy HH:mm") / @Model.CloseDateTime.ToString("dd-MMM-yyyy HH:mm") </p>
    </div>

@using (Html.BeginForm("Index", "Game", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.PlayerId)

    <table class="table borderless">
        @for (var i = 0; i < Model.PickItems.Count; i++)
        {
            @Html.HiddenFor(m => Model.PickItems[i].FixtureId)
            @Html.HiddenFor(m => Model.PickItems[i].HomeTeamBadgeUrl)
            @Html.HiddenFor(m => Model.PickItems[i].AwayTeamBadgeUrl)
            @Html.HiddenFor(m => Model.PickItems[i].HomeTeamName)
            @Html.HiddenFor(m => Model.PickItems[i].AwayTeamName)
            var item = Model.PickItems[i];
            if (i == 0)
            {
                <thead>
                    <tr>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th>Banker</th>
                        <th>Double</th>
                    </tr>
                </thead>
            }

            <tr>
                <td><img src="@item.HomeTeamBadgeUrl" width="50" height="50" /></td>
                <td>
                    @Html.TextBoxFor(m => m.PickItems[i].HomeScore, inputAttributes)
                <br /> @Html.ValidationMessageFor(m => m.PickItems[i].HomeScore)
            </td>

            <td>
                @Html.TextBoxFor(m => m.PickItems[i].AwayScore, inputAttributes)
            <br /> @Html.ValidationMessageFor(m => m.PickItems[i].AwayScore)
        </td>
        <td><img src="@item.AwayTeamBadgeUrl" width="50" height="50" /></td>
        <td>
            @Html.CheckBoxFor(m => m.PickItems[i].Banker, checkboxAttributesBanker)
        </td>
        <td>
            @Html.CheckBoxFor(m => m.PickItems[i].Double, checkboxAttributesDouble)
        </td>
    </tr>
        }
    </table>
    <br />
    if (Model.ReadOnly)
    {
        <input type="submit" name="submit" class="btn btn-primary btn-lg btn-block" value="Submit" disabled readonly />
    }
    else
    {
        <input type="submit" name="submit" class="btn btn-primary btn-lg btn-block" value="Submit" />
    }
}

@section scripts {
    @Scripts.Render("~/bundles/game/index")
}
